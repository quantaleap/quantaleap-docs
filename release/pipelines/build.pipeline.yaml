trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Environment variables for the pipeline job
  - name: System.Debug
    value: true

jobs:
  - job: ConfigureBuild
    displayName: Configure build details
    steps:
      - script: |
          cd $(Build.SourcesDirectory)
          version=$(node -p "require('./package.json').version")
          description=$(node -p "require('./package.json').description")
          echo "##vso[task.setvariable variable=cmdb_applicationVersion;isoutput=true]$version"
          echo "##vso[task.setvariable variable=cmdb_applicationDescription;isoutput=true]$description"
          echo "##vso[build.updatebuildnumber]$(Build.BuildNumber)-v$version"
        displayName: Update build metadata
        name: variableSet
  - job: CreateBuild
    dependsOn:
      - ConfigureBuild
    displayName: Publish build artifacts
    variables:
      cmdb_applicationVersion: $[ dependencies.ConfigureBuild.outputs['variableSet.cmdb_applicationVersion'] ]
    steps:
      - script: |
          npm install --no-fund --silent
          npm run build
        displayName: Build artifacts
        workingDirectory: $(Build.SourcesDirectory)
      - script: |
          directory=$(Build.StagingDirectory)/html
          echo "Cleaning staging directory"
          rm -rf $(Build.StagingDirectory)/*
          mkdir -p $directory/
          cp -v -r build/. $directory/
          cp staticwebapp.config.json $directory/
        displayName: 'Copy files'
        workingDirectory: $(Build.SourcesDirectory)
      - task: PublishPipelineArtifact@1
        displayName: Store build artifacts
        inputs:
          targetPath: '$(Build.StagingDirectory)/html/'
          artifactName: 'html'
